//функция печатающая то, что ей дали на вход
def myFunc(arg) {
    println (arg)
}

pipeline {
    agent any

    tools {
        jdk "JDK17"
        maven "MAVEN_3.5.2"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '2'))
        // disableConcurrentBuilds()
        timestamps()
        ansiColor('xterm')
    }

    environment { 
        // DB_URL = "jdbc:postgresql://158.160.59.184:5432/db_webbooks"    //переменная для адреса и мени бд
        GITHUB_REPO_CRED = credentials("18770cb2-d5f4-4e43-9e04-ef562bc35c3a")   //https://github.com/AndreyChuyan/DewOps.git
        GITHUB_REPO_OWNER = "AndreyChuyan"
	    GITHUB_REPO_NAME = "DewOps"
        GITHUB_REPO_URL = "https://github.com/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}.git"
        DB_URL = "jdbc:postgresql://158.160.59.184:5432/db_webbooks"
    }

    // parameters {
    //     string defaultValue: 'test string', description: 'введите строку', name: 'MY_STRING' //задаем дополнительные параметры и параметр по умолчанию
    // }

//-----stages-
    stages {        
        stage('Print parametrs') {
            steps {
                echo "${params.MY_STRING}"  //вывод и применение заданных параметров
                // echo "${DB_URL}"  //вывод и применение заданных параметров
            }
        }        
        stage('Checkout') {
            steps {
                git branch: 'main', changelog: false, credentialsId: '18770cb2-d5f4-4e43-9e04-ef562bc35c3a', poll: false, url: env.GITHUB_REPO_URL
            }
        }
        stage('Build') {
            steps {
                script {
                    if (env.BRANCH_NAME == "main") {
                        myFunc(params.MY_STRING) //выполнение ранее объявленной функции по условию
                    }
                
                    // Get some code from a GitHub repository
                    // git branch: 'main', credentialsId: 'github-http', poll: false, url: 'https://github.com/levelup-devops/2023-09-example.git'

                    dir('apps/webbook-java') {
                        // Run Maven on a Unix agent.
                        // sh "mvn package -DskipTests"
                        // sh "mvn package"
                        sh "mvn -B -DskipTests -Dmaven.repo.local=${WORKSPACE}/.m2/repository clean package"
                    }
                }
            }
        }
        
        stage('Upload') {
            steps {
                dir('apps/webbook-java') {
                    // sh "mvn -s settings.xml deploy"
                    // sh "mvn -DskipTests -s settings.xml deploy"
                    sh "mvn -e -X -DskipTests -s settings.xml -Dmaven.repo.local=${WORKSPACE}/.m2/repository deploy"
                }
            }
        }
    }
}
